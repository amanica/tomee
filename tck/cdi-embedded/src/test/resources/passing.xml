<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements. See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version
    2.0 (the "License"); you may not use this file except in compliance
    with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0 Unless required by
    applicable law or agreed to in writing, software distributed under the
    License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
    CONDITIONS OF ANY KIND, either express or implied. See the License for
    the specific language governing permissions and limitations under the
    License.
-->
<!-- OWB one ATM, remove exclude groups to be openejb ;) -->
<suite name="JSR-346-TCK" verbose="2" configfailurepolicy="continue" >
  <listeners>
    <!-- Required - avoid randomly mixed test method execution -->
    <listener class-name="org.jboss.cdi.tck.impl.testng.SingleTestClassMethodInterceptor"/>
    <!-- Optional - intended for debug purpose only -->
    <listener class-name="org.jboss.cdi.tck.impl.testng.ConfigurationLoggingListener"/>
    <listener class-name="org.jboss.cdi.tck.impl.testng.ProgressLoggingTestListener"/>
    <!-- Optional - it's recommended to disable the default JUnit XML reporter -->
    <listener class-name="org.testng.reporters.SuiteHTMLReporter"/>
    <listener class-name="org.testng.reporters.FailedReporter"/>
    <listener class-name="org.testng.reporters.XMLReporter"/>
    <listener class-name="org.testng.reporters.EmailableReporter"/>
    <listener class-name="org.testng.reporters.TestHTMLReporter"/>
  </listeners>

  <test name="JSR-346 TCK">
    <groups>
      <run>
        <exclude name="integration" />
        <exclude name="javaee-full" />
      </run>
    </groups>

    <packages>
      <package name="org.jboss.cdi.tck.tests.*">
        <!-- CHALLENGED TCK TESTS: clarifying this in the EG -->
        <exclude name="org.jboss.cdi.tck.tests.inheritance.specialization.simple"/>
        <!-- CDITCK-432 -->
        <exclude name="org.jboss.cdi.tck.tests.decorators.builtin.event.complex"/>
      </package>
      <package name="org.jboss.cdi.tck.interceptors.tests.*"/>
    </packages>

    <classes>
      <!-- Issues in the spec -->
      <!-- CDI-437 -->
      <class name="org.jboss.cdi.tck.tests.lookup.byname.ambiguous.broken.AmbiguousELNamesTest">
        <methods>
          <exclude name=".*"/>
        </methods>
      </class>

      <!-- Issues in the TCK -->
      <!-- CDITCK-444 -->
      <class name="org.jboss.cdi.tck.tests.extensions.lifecycle.processBeanAttributes.broken.invalid.InvalidStereotypeTest">
        <methods>
          <exclude name=".*"/>
        </methods>
      </class>

      <!-- CDITCK-418 -->
      <class name="org.jboss.cdi.tck.interceptors.tests.contract.interceptorLifeCycle.environment.jndi.ejb.InterceptorEnvironmentJNDISessionBeanTest">
        <methods>
          <exclude name=".*"/>
        </methods>
      </class>

      <!-- CDITCK-417 -->
      <class name="org.jboss.cdi.tck.tests.extensions.registration.BeanRegistrationByExtensionInEarLibraryTest">
        <methods>
          <exclude name=".*"/>
        </methods>
      </class>

      <!-- CDITCK-421 -->
      <class name="org.jboss.cdi.tck.interceptors.tests.contract.aroundInvoke.AroundInvokeAccessInterceptorTest">
        <methods>
          <exclude name=".*"/>
        </methods>
      </class>

      <!-- CDITCK-427 -->
      <class name="org.jboss.cdi.tck.tests.lookup.circular.CircularDependencyTest">
        <methods>
          <exclude name="testDependentProducerMethodDeclaredOnNormalBeanWhichInjectsProducedBean"/>
        </methods>
      </class>

      <!-- CDITCK-428 -->
      <class name="org.jboss.cdi.tck.interceptors.tests.contract.interceptorLifeCycle.InterceptorLifeCycleTest">
        <methods>
          <exclude name="testInterceptorInstanceCreatedWhenTargetInstanceCreated"/>
        </methods>
      </class>

      <class name="org.jboss.cdi.tck.interceptors.tests.contract.aroundTimeout.AroundTimeoutInterceptorTest">
        <methods>
          <exclude name=".*"/>
        </methods>
      </class>

      <!-- CDITCK-423 -->
      <class name="org.jboss.cdi.tck.tests.implementation.enterprise.definition.remote.RemoteInterfaceNotInAPITypesTest">
        <methods>
          <exclude name=".*"/>
        </methods>
      </class>

      <!-- CDITCK-437 -->
      <class name="org.jboss.cdi.tck.tests.decorators.interceptor.DecoratorAndInterceptorTest">
        <methods>
          <exclude name="testLifecycleCallbacks"/>
        </methods>
      </class>

      <!-- CDITCK-449 -->
      <class name="org.jboss.cdi.tck.tests.extensions.beanManager.beanAttributes.CreateBeanAttributesTest">
        <methods>
          <exclude name="testBeanAttributesForManagedBeanWithModifiedAnnotatedType"/>
        </methods>
      </class>
    </classes>
  </test>
</suite>

<!--
<suite name="CDI 1.0 TCK" verbose="0">
  <test name="CDI TCK">
    <packages>
        <package name="org.jboss.jsr299.tck.tests.*"/>
        <package name="org.jboss.jsr299.tck.interceptors.tests.*"/>
    </packages>
    <classes>
      <class name="org.jboss.jsr299.tck.tests.context.ContextDestroysBeansTest">
        <methods>
          <exclude name="testContextDestroysBeansWhenDestroyed"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.ContextTest">
        <methods>
          <exclude name="testBuiltInContexts"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.DestroyForSameCreationalContext2Test">
        <methods>
          <exclude name="testDestroyForSameCreationalContextOnly"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.DestroyForSameCreationalContextTest">
        <methods>
          <exclude name="testDestroyForSameCreationalContextOnly"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.DestroyedInstanceReturnedByGetTest">
        <methods>
          <exclude name="testDestroyedInstanceMustNotBeReturnedByGet"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.GetFromContextualTest">
        <methods>
          <exclude name="testGetMayNotCreateNewInstanceUnlessCreationalContextGiven"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.GetWithNoCreationalContextTest">
        <methods>
          <exclude name="testGetWithoutCreationalContextReturnsNull"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.NormalContextTest">
        <methods>
          <exclude name="testGetMayNotReturnNullUnlessContextualCreateReturnsNull"/>
          <exclude name="testGetReturnsExistingInstance"/>
          <exclude name="testGetWithCreationalContextReturnsNewInstance"/>
          <exclude name="testSameNormalScopeBeanInjectedEverywhere"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.application.ApplicationContextTest">
        <methods>
          <exclude name="testApplicationContextSharedBetweenServletRequests"/>
          <exclude name="testApplicationScopeActiveDuringDoFilterMethod"/>
          <exclude name="testApplicationScopeActiveDuringHttpSessionListenerInvocation"/>
          <exclude name="testApplicationScopeActiveDuringServiceMethod"/>
          <exclude name="testApplicationScopeActiveDuringServletContextListenerInvocation"/>
          <exclude name="testApplicationScopeActiveDuringServletRequestListenerInvocation"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.conversation.ClientConversationContextTest">
        <methods>
          <exclude name="testBeanWithDefaultQualifier"/>
          <exclude name="testBeanWithNameJavaxEnterpriseContextConversation"/>
          <exclude name="testBeanWithRequestScope"/>
          <exclude name="testBeginAlreadyLongRunningConversationThrowsException"/>
          <exclude name="testConversationActiveDuringNonFacesRequest"/>
          <exclude name="testConversationBeginMakesConversationLongRunning"/>
          <exclude name="testConversationEndMakesConversationTransient"/>
          <exclude name="testConversationHasDefaultTimeout"/>
          <exclude name="testConversationIdMayBeSetByApplication"/>
          <exclude name="testConversationIdMayBeSetByContainer"/>
          <exclude name="testConversationIdSetByContainerIsUnique"/>
          <exclude name="testConversationsDontCrossSessionBoundary1"/>
          <exclude name="testConversationsDontCrossSessionBoundary2"/>
          <exclude name="testEndTransientConversationThrowsException"/>
          <exclude name="testLongRunningConversationInstancesNotDestroyedAtRequestEnd"/>
          <exclude name="testSetConversationTimeoutOverride"/>
          <exclude name="testTransientConversationHasNullId"/>
          <exclude name="testTransientConversationInstancesDestroyedAtRequestEnd"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.conversation.InvalidatingSessionDestroysConversationTest">
        <methods>
          <exclude name="testInvalidatingSessionDestroysConversation"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.conversation.LongRunningConversationPropagatedByFacesContextTest">
        <methods>
          <exclude name="testConversationPropagated"/>
          <exclude name="testConversationPropagatedOverRedirect"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.conversation.ManualCidPropagationTest">
        <methods>
          <exclude name="testManualCidPropagation"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.dependent.DependentContextTest">
        <methods>
          <exclude name="testContextIsActiveWhenEvaluatingElExpression"/>
          <exclude name="testDependentsDestroyedWhenElEvaluationCompletes"/>
          <exclude name="testInstanceUsedForElEvaluationNotShared"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.PassivatingContextTest">
        <methods>
          <exclude name="testNonSerializableProducerFieldDeclaredPassivatingThrowsIllegalProductException"/>
          <exclude name="testPassivatingScopeProducerMethodReturnsUnserializableObjectNotOk"/>
          <exclude name="testPassivationOccurs"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.dependentScopedProducerFieldReturnsNonSerializableObjectForInjectionIntoStatefulSessionBean.EnterpriseBeanWithIllegalDependencyTest">
        <methods>
          <exclude name="test"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.dependentScopedProducerMethodReturnsNonSerializableObjectForInjectionIntoStatefulSessionBean.EnterpriseBeanWithIllegalDependencyTest">
        <methods>
          <exclude name="test"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.passivating.broken.enterpriseBeanWithNonPassivatingDecorator.EnterpriseBeanWithNonPassivatingDecoratorTest">
        <methods>
          <exclude name="testEnterpriseBeanWithNonPassivatingDecoratorFails"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.request.RequestContextTest">
        <methods>
          <exclude name="testRequestScopeActiveDuringServiceMethod"/>
          <exclude name="testRequestScopeActiveDuringServletFilter"/>
          <exclude name="testRequestScopeIsDestroyedAfterServletRequest"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.context.session.SessionContextTest">
        <methods>
          <exclude name="testSessionContextDestroyedWhenHttpSessionInvalidated"/>
          <exclude name="testSessionContextDestroyedWhenHttpSessionTimesOut"/>
          <exclude name="testSessionContextSharedBetweenServletRequestsInSameHttpSession"/>
          <exclude name="testSessionScopeActiveDuringDoFilterMethod"/>
          <exclude name="testSessionScopeActiveDuringServiceMethod"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.deployment.packaging.bundledLibrary.LibraryInEarTest">
        <methods>
          <exclude name="test"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.deployment.packaging.bundledLibrary.LibraryInWarTest">
        <methods>
          <exclude name="test"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.enterprise.lifecycle.EnterpriseBeanLifecycleTest">
        <methods>
          <exclude name="testCreateSFSB"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.enterprise.newBean.NewEnterpriseBeanICTest">
        <methods>
          <exclude name="testNewBeanHasNoDisposalMethods"/>
          <exclude name="testNewBeanHasNoProducerMethods"/>
          <exclude name="testNewBeanHasSameInitializers"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.enterprise.remove.EnterpriseBeanRemoveMethodTest">
        <methods>
          <exclude name="testApplicationCannotCallRemoveMethodOnNonDependentScopedSessionEnterpriseBean"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.lifecycle.SimpleBeanLifecycleTest">
        <methods>
          <exclude name="testSerializeSessionScoped"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.newSimpleBean.NewSimpleBeanTest">
        <methods>
          <exclude name="testNewBeanHasSameConstructor"/>
          <exclude name="testNewBeanHasSameInitializers"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.resource.env.EnvInjectionTest">
        <methods>
          <exclude name="testInjectionOfEnv"/>
          <exclude name="testProduceEnvProxy"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.resource.persistenceContext.PersistenceContextInjectionTest">
        <methods>
          <exclude name="testBeanTypesAndBindingTypesOfPersistenceContext"/>
          <exclude name="testInjectionOfPersistenceContext"/>
          <exclude name="testInjectionOfPersistenceUnit"/>
          <exclude name="testPassivationOfPersistenceContext"/>
          <exclude name="testPassivationOfPersistenceUnit"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.implementation.simple.resource.resource.InjectionOfResourceTest">
        <methods>
          <exclude name="testInjectionOfResource"/>
          <exclude name="testPassivatingResource"/>
          <exclude name="testProduceResourceProxy"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.interceptors.definition.enterprise.nonContextualReference.SessionBeanInterceptorOnNonContextualEjbReferenceTest">
        <methods>
          <exclude name="testNonContextualSessionBeanReferenceIsIntercepted"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.circular.CircularDependencyTest">
        <methods>
          <exclude name="testCircularInjectionOnTwoNormalBeans"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.clientProxy.incontainer.ClientProxyTest">
        <methods>
          <exclude name="testInvocationIsProcessedOnCurrentInstance"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.el.ResolutionByNameTest">
        <methods>
          <exclude name="testContextCreatesNewInstanceForInjection"/>
          <exclude name="testELResolverReturnsContextualInstance"/>
          <exclude name="testQualifiedNameLookup"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.el.integration.IntegrationWithUnifiedELTest">
        <methods>
          <exclude name="testELResolverRegisteredWithJsf"/>
          <exclude name="testELResolverRegisteredWithServletContainer"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.injection.non.contextual.InjectionIntoNonContextualComponentTest">
        <methods>
          <exclude name="testFilterInitializerMethodCalled"/>
          <exclude name="testInjectionIntoFilter"/>
          <exclude name="testInjectionIntoJSFManagedBean"/>
          <exclude name="testInjectionIntoServlet"/>
          <exclude name="testInjectionIntoServletListener"/>
          <exclude name="testInjectionIntoTagHandler"/>
          <exclude name="testInjectionIntoTagLibraryListener"/>
          <exclude name="testServletInitializerMethodCalled"/>
          <exclude name="testServletListenerInitializerMethodCalled"/>
          <exclude name="testTagLibraryListenerInitializerMethodCalled"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.injection.non.contextual.ws.InjectionIntoWebServiceEndPointTest">
        <methods>
          <exclude name="testInjectionIntoWebServiceEndpoint"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.injectionpoint.broken.not.bean.InjectionPointTest">
        <methods>
          <exclude name="testDefinitionErrorDetected"/>
        </methods>
      </class>
      <class name="org.jboss.jsr299.tck.tests.lookup.manager.jndi.ManagerTest">
        <methods>
          <exclude name="testManagerLookupInJndi"/>
        </methods>
      </class>

      CDI-140
      <class
        name="org.jboss.jsr299.tck.tests.context.passivating.broken.passivatingProducerMethodWithNonPassivatingParameter.PassivatingProducerMethodWithNonPassivatingParameterTest">
        <methods>
          <exclude name="testSimpleDependentWebBeanWithNonSerializableImplementationInjectedIntoProducerMethodParameterWithPassivatingScopeFails"></exclude>
        </methods>
      </class>
    </classes>
  </test>
</suite>
-->
